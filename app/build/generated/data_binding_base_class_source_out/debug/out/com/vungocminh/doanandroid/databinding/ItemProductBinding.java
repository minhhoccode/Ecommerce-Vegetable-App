// Generated by view binder compiler. Do not edit!
package com.vungocminh.doanandroid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.vungocminh.doanandroid.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemProductBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout containerButton;

  @NonNull
  public final LinearLayout containerCaption;

  @NonNull
  public final LinearLayout containerHeadline3;

  @NonNull
  public final FrameLayout containerProductImage;

  @NonNull
  public final LinearLayout containerProductProductWithCounter;

  @NonNull
  public final ImageView icIncrea;

  @NonNull
  public final ImageView imageProductImage;

  @NonNull
  public final TextView numbers;

  @NonNull
  public final TextView price1;

  @NonNull
  public final TextView price2;

  @NonNull
  public final TextView productTitle;

  @NonNull
  public final TextView productWeight;

  private ItemProductBinding(@NonNull FrameLayout rootView, @NonNull LinearLayout containerButton,
      @NonNull LinearLayout containerCaption, @NonNull LinearLayout containerHeadline3,
      @NonNull FrameLayout containerProductImage,
      @NonNull LinearLayout containerProductProductWithCounter, @NonNull ImageView icIncrea,
      @NonNull ImageView imageProductImage, @NonNull TextView numbers, @NonNull TextView price1,
      @NonNull TextView price2, @NonNull TextView productTitle, @NonNull TextView productWeight) {
    this.rootView = rootView;
    this.containerButton = containerButton;
    this.containerCaption = containerCaption;
    this.containerHeadline3 = containerHeadline3;
    this.containerProductImage = containerProductImage;
    this.containerProductProductWithCounter = containerProductProductWithCounter;
    this.icIncrea = icIncrea;
    this.imageProductImage = imageProductImage;
    this.numbers = numbers;
    this.price1 = price1;
    this.price2 = price2;
    this.productTitle = productTitle;
    this.productWeight = productWeight;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container_button;
      LinearLayout containerButton = ViewBindings.findChildViewById(rootView, id);
      if (containerButton == null) {
        break missingId;
      }

      id = R.id.container_caption;
      LinearLayout containerCaption = ViewBindings.findChildViewById(rootView, id);
      if (containerCaption == null) {
        break missingId;
      }

      id = R.id.container_headline3;
      LinearLayout containerHeadline3 = ViewBindings.findChildViewById(rootView, id);
      if (containerHeadline3 == null) {
        break missingId;
      }

      id = R.id.container_product_image;
      FrameLayout containerProductImage = ViewBindings.findChildViewById(rootView, id);
      if (containerProductImage == null) {
        break missingId;
      }

      id = R.id.container_product_product_with_counter;
      LinearLayout containerProductProductWithCounter = ViewBindings.findChildViewById(rootView, id);
      if (containerProductProductWithCounter == null) {
        break missingId;
      }

      id = R.id.ic_increa;
      ImageView icIncrea = ViewBindings.findChildViewById(rootView, id);
      if (icIncrea == null) {
        break missingId;
      }

      id = R.id.image_product_image;
      ImageView imageProductImage = ViewBindings.findChildViewById(rootView, id);
      if (imageProductImage == null) {
        break missingId;
      }

      id = R.id.numbers;
      TextView numbers = ViewBindings.findChildViewById(rootView, id);
      if (numbers == null) {
        break missingId;
      }

      id = R.id.price1;
      TextView price1 = ViewBindings.findChildViewById(rootView, id);
      if (price1 == null) {
        break missingId;
      }

      id = R.id.price2;
      TextView price2 = ViewBindings.findChildViewById(rootView, id);
      if (price2 == null) {
        break missingId;
      }

      id = R.id.product_title;
      TextView productTitle = ViewBindings.findChildViewById(rootView, id);
      if (productTitle == null) {
        break missingId;
      }

      id = R.id.product_weight;
      TextView productWeight = ViewBindings.findChildViewById(rootView, id);
      if (productWeight == null) {
        break missingId;
      }

      return new ItemProductBinding((FrameLayout) rootView, containerButton, containerCaption,
          containerHeadline3, containerProductImage, containerProductProductWithCounter, icIncrea,
          imageProductImage, numbers, price1, price2, productTitle, productWeight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
